<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!--  Background Colors  -->
    <Color x:Key="CustomDarkBackground">#161719</Color>
    <SolidColorBrush x:Key="CustomDarkBackgroundColor" Color="{StaticResource CustomDarkBackground}" />

    <Color x:Key="CustomDarkerBackground">#0c0d0e</Color>
    <SolidColorBrush x:Key="CustomDarkerBackgroundColor" Color="{StaticResource CustomDarkerBackground}" />

    <Color x:Key="CustomConsoleBackground">#1c1c1c</Color>
    <SolidColorBrush x:Key="CustomConsoleBackgroundColor" Color="{StaticResource CustomConsoleBackground}" />

    <Color x:Key="CustomButtonBackground">#212326</Color>
    <SolidColorBrush x:Key="CustomButtonBackgroundColor" Color="{StaticResource CustomButtonBackground}" />

    <Color x:Key="CustomButtonHoverBackground">#292b2f</Color>
    <SolidColorBrush x:Key="CustomButtonHoverBackgroundColor" Color="{StaticResource CustomButtonHoverBackground}" />

    <Color x:Key="CustomButtonDisabledBackground">#6C7687</Color>
    <SolidColorBrush x:Key="CustomButtonDisabledBackgroundColor" Color="{StaticResource CustomButtonDisabledBackground}" />

    <!--  Text Colors  -->
    <Color x:Key="CustomPrimaryText">#c5c8c6</Color>
    <SolidColorBrush x:Key="CustomPrimaryTextColor" Color="{StaticResource CustomPrimaryText}" />

    <Color x:Key="CustomSecondaryText">#a0a0a0</Color>
    <SolidColorBrush x:Key="CustomSecondaryTextColor" Color="{StaticResource CustomSecondaryText}" />

    <Color x:Key="CustomBorder">#313131</Color>
    <SolidColorBrush x:Key="CustomBorderColor" Color="{StaticResource CustomBorder}" />

    <Color x:Key="CustomNeon">#00FF9F</Color>

    <SolidColorBrush x:Key="CustomNeonColor" Color="{StaticResource CustomNeon}" />

    <!--  Status Colors  -->
    <Color x:Key="CustomInfoText">#66D9EF</Color>
    <SolidColorBrush x:Key="CustomInfoTextColor" Color="{StaticResource CustomInfoText}" />

    <Color x:Key="CustomWarningText">#FD971F</Color>
    <SolidColorBrush x:Key="CustomWarningTextColor" Color="{StaticResource CustomWarningText}" />

    <Color x:Key="CustomErorrText">#ff5555</Color>
    <SolidColorBrush x:Key="CustomErorrTextColor" Color="{StaticResource CustomErorrText}" />

    <Style x:Key="CustomMenuTitleText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource CustomPrimaryTextColor}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="15" />
    </Style>

    <Style x:Key="CustomMenuSecondaryTitleText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource CustomSecondaryTextColor}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <!--  Control Styles  -->
    <Style
        x:Key="CustomButton"
        BasedOn="{StaticResource MaterialDesignFlatButton}"
        TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="BackgroundBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding materialDesign:ButtonAssist.CornerRadius}"
                        RenderTransformOrigin="0.5,0.5">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#3A3D42"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource CustomButtonBackground}"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="CustomToggleButtonStyle"
        BasedOn="{StaticResource MaterialDesignSwitchToggleButton}"
        TargetType="ToggleButton">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Background" Value="#2c3141" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <!--  Toggle background  -->
                        <Border
                            x:Name="SwitchBackground"
                            Background="{TemplateBinding Background}"
                            CornerRadius="12.5" />

                        <!--  Toggle thumb  -->
                        <Ellipse
                            x:Name="SwitchThumb"
                            Width="20"
                            Height="20"
                            Margin="2.5"
                            HorizontalAlignment="Left"
                            Fill="Gray" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  IsChecked True  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="SwitchThumb" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="SwitchThumb" Property="Fill" Value="#00FFAA" />
                        </Trigger>

                        <!--  IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="SwitchThumb" Property="Opacity" Value="0.85" />
                        </Trigger>

                        <!--  IsEnabled False  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="SwitchThumb" Property="Fill" Value="#444" />
                            <Setter TargetName="SwitchBackground" Property="Background" Value="#222" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="CustomProgressBar"
        BasedOn="{StaticResource MaterialDesignLinearProgressBar}"
        TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <Grid x:Name="PART_Track" ClipToBounds="true">
                            <Rectangle
                                x:Name="PART_Indicator"
                                Width="0"
                                HorizontalAlignment="Left"
                                Fill="{TemplateBinding Foreground}"
                                RadiusX="4"
                                RadiusY="4" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter TargetName="PART_Indicator" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="PART_Indicator" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="PART_Indicator" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFE0E0E0" />
        <Setter Property="Foreground" Value="#FF2196F3" />
        <Setter Property="Height" Value="10" />
    </Style>

    <QuadraticEase x:Key="EaseOut" EasingMode="EaseOut" />

</ResourceDictionary>